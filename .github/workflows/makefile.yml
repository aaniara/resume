name: Makefile CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write  # Needed for creating releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up TeXLive
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          texlive-base \
          texlive-latex-recommended \
          texlive-latex-extra \
          texlive-fonts-recommended \
          texlive-fonts-extra \
          texlive-xetex \
          texlive-bibtex-extra \
          texlive-luatex \
          texlive-science \
          latexmk

    - name: Prepare build environment
      run: mkdir -p output

    - name: Build LaTeX documents
      run: make

    - name: Clean auxiliary files
      run: make clean_aux

    - name: Upload PDFs
      uses: actions/upload-artifact@v3
      with:
        name: output-pdfs
        path: output/*.pdf

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download PDFs
      uses: actions/download-artifact@v3
      with:
        name: output-pdfs
        path: output

    - name: Fetch Commit Details
      id: fetch_commits
      run: |
        # Fetch the latest commits using GitHub REST API
        curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/commits > commits.json

        # Extract the commit messages
        COMMIT_MESSAGES=$(jq -r '.[].commit.message' commits.json | head -n 10 | sed ':a;N;$!ba;s/\n/\\n/g')
        echo "Commit Messages: $COMMIT_MESSAGES"

        # Write to a temporary file for environment variable handling
        echo "commit_messages=$COMMIT_MESSAGES" >> $GITHUB_ENV

    - name: Generate Release Notes
      id: generate_notes
      run: |
        echo "### Release Notes" > release_notes.txt
        echo "The following changes are included in this release:" >> release_notes.txt
        echo "${{ env.commit_messages }}" >> release_notes.txt
        echo "notes=$(cat release_notes.txt)" >> $GITHUB_ENV

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: output/*.pdf
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.run_number }}
        name: Release ${{ github.run_number }}
        body: ${{ env.notes }}
